name: Test code and build a docker image

on: push

jobs:
  lint_python:
    name: Lint code base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.9', '3.8' ]
      steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up python env
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: lint code
        uses: py-actions/flake8@v2
        with:
          ignore: "E501"
          path: "app"

      - name: Unit testing with pytest
        run: |
          python3 -m pip install pytest
          pytest ./tests -v
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build coverage file
        run: |
          pytest --cache-clear --cov=app tests/ > pytest-coverage.txt
      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
       -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/proxy-http:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/proxy-http:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/proxy-http:buildcache,mode=max